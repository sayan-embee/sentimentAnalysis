/*
Deployment script for NSSOperationAutomationP1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NSSOperationAutomationP1"
:setvar DefaultFilePrefix "NSSOperationAutomationP1"
:setvar DefaultDataPath "D:\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Microsoft SQL Server\MSSQL16.MSSQLSERVER01\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating User-Defined Table Type [dbo].[udt_T_CardNotificationResponse]...';


GO
CREATE TYPE [dbo].[udt_T_CardNotificationResponse] AS TABLE (
    [NotificationId]      BIGINT         NOT NULL,
    [ReplyToId]           NVARCHAR (100) NULL,
    [ActivityId]          NVARCHAR (100) NULL,
    [ConversationId]      NVARCHAR (500) NULL,
    [ServiceUrl]          NVARCHAR (100) NULL,
    [UserName]            NVARCHAR (100) NULL,
    [UserADID]            NVARCHAR (100) NULL,
    [Type]                NVARCHAR (50)  NULL,
    [CreatedOnUTC]        DATETIME       NULL,
    [IsActive]            BIT            NULL,
    [CaseNumber]          VARCHAR (50)   NULL,
    [AssignmentId]        BIGINT         NULL,
    [AssignmentHistoryId] BIGINT         NULL,
    [CallDetailId]        BIGINT         NULL);


GO
PRINT N'Creating Table [dbo].[T_CardNotificationResponse]...';


GO
CREATE TABLE [dbo].[T_CardNotificationResponse] (
    [NotificationId]      BIGINT         IDENTITY (1, 1) NOT NULL,
    [ReplyToId]           NVARCHAR (100) NULL,
    [ActivityId]          NVARCHAR (100) NULL,
    [ConversationId]      NVARCHAR (500) NULL,
    [ServiceUrl]          NVARCHAR (100) NULL,
    [UserName]            NVARCHAR (100) NULL,
    [UserADID]            NVARCHAR (100) NULL,
    [Type]                NVARCHAR (50)  NULL,
    [CreatedOnUTC]        DATETIME       NULL,
    [IsActive]            BIT            NULL,
    [CaseNumber]          VARCHAR (50)   NULL,
    [AssignmentId]        BIGINT         NULL,
    [AssignmentHistoryId] BIGINT         NULL,
    [CallDetailId]        BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([NotificationId] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[usp_AssignReassignTicket_CardResponse_Insert]...';


GO
CREATE PROCEDURE [dbo].[usp_AssignReassignTicket_CardResponse_Insert]
(
	@udt_CardList dbo.[udt_T_CardNotificationResponse] READONLY
)
AS
BEGIN

	DECLARE @SuccessMsg VARCHAR(100);
	DECLARE @ErrorMsg VARCHAR(100);

	BEGIN TRY
	-----------------

		BEGIN TRANSACTION
		-----------------

		INSERT INTO dbo.[T_CardNotificationResponse]
		(
			ReplyToId,
			ActivityId,
			ConversationId,
			ServiceUrl,
			UserName,
			UserADID,
			[Type],
			CreatedOnUTC,
			IsActive,
			CaseNumber,
			AssignmentId,
			AssignmentHistoryId,
			CallDetailId
		)
		SELECT
			udt.ReplyToId,
			udt.ActivityId,
			udt.ConversationId,
			udt.ServiceUrl,
			udt.UserName,
			udt.UserADID,
			udt.[Type],
			GETUTCDATE(),
			1,
			udt.CaseNumber,
			udt.AssignmentId,
			udt.AssignmentHistoryId,
			udt.CallDetailId
		FROM @udt_CardList udt

		SET @SuccessMsg = 'DB execution successful - Card response inserted';

	END TRY
	-----------------
	BEGIN CATCH
	-----------------
		
		ROLLBACK TRANSACTION
		SET @ErrorMsg = 'DB execution failed - Insert card response'
		SELECT
		@ErrorMsg												AS [Message],
		ERROR_MESSAGE()		                                    AS ErrorMessage,
		0					                                    AS [Status],
		''				                                        AS Id
		RETURN

	END CATCH
	-----------------

	COMMIT TRANSACTION
	-----------------
	SELECT
		@SuccessMsg												AS [Message],
		''						                                AS ErrorMessage,
		1					                                    AS [Status],
		@@IDENTITY												AS Id

END
GO
PRINT N'Update complete.';


GO
